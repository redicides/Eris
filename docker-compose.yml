networks:
  bridge:
    name: eris_bridge
    driver: bridge

services:
  bot:
    container_name: eris_bot
    build: 
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    networks:
      - bridge
    volumes:
      - ./eris.cfg.yml:/eris/eris.cfg.yml
    depends_on:
      database:
        condition: service_healthy

  database:
    container_name: eris_psql
    image: postgres:latest
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB} 
    volumes:
      - psql:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - bridge
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  psql:
    name: eris_psql
    driver: local
